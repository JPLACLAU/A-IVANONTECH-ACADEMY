{
	"id": "8195ffdc2b254ba8ac1e781d971e7b97",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"ETH-Remix/freeCodeCamp.org/SimpleStorage.sol": {
				"content": "pragma solidity 0.8.13;\r\n\r\ncontract SimpleStorage {\r\n    uint256 favoriteNumber = 5;\r\n    bool favoriteBool = false;\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ETH-Remix/freeCodeCamp.org/SimpleStorage.sol": {
				"SimpleStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ETH-Remix/freeCodeCamp.org/SimpleStorage.sol\":27:125  contract SimpleStorage {... */\n  mstore(0x40, 0x80)\n    /* \"ETH-Remix/freeCodeCamp.org/SimpleStorage.sol\":82:83  5 */\n  0x05\n    /* \"ETH-Remix/freeCodeCamp.org/SimpleStorage.sol\":57:83  uint256 favoriteNumber = 5 */\n  0x00\n  sstore\n    /* \"ETH-Remix/freeCodeCamp.org/SimpleStorage.sol\":110:115  false */\n  0x00\n    /* \"ETH-Remix/freeCodeCamp.org/SimpleStorage.sol\":90:115  bool favoriteBool = false */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ETH-Remix/freeCodeCamp.org/SimpleStorage.sol\":27:125  contract SimpleStorage {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ETH-Remix/freeCodeCamp.org/SimpleStorage.sol\":27:125  contract SimpleStorage {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ee986f4e6b414e1d6139ff8dab44dec50616b794c90e66beb4f8a8783b6c98c964736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260056000556000600160006101000a81548160ff021916908315150217905550348015602f57600080fd5b50603f80603d6000396000f3fe6080604052600080fdfea2646970667358221220ee986f4e6b414e1d6139ff8dab44dec50616b794c90e66beb4f8a8783b6c98c964736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x0 SSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x3D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE SWAP9 PUSH16 0x4E6B414E1D6139FF8DAB44DEC50616B7 SWAP5 0xC9 0xE PUSH7 0xBEB4F8A8783B6C SWAP9 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "27:98:0:-:0;;;82:1;57:26;;110:5;90:25;;;;;;;;;;;;;;;;;;;;27:98;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220ee986f4e6b414e1d6139ff8dab44dec50616b794c90e66beb4f8a8783b6c98c964736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE SWAP9 PUSH16 0x4E6B414E1D6139FF8DAB44DEC50616B7 SWAP5 0xC9 0xE PUSH7 0xBEB4F8A8783B6C SWAP9 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "27:98:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "46439",
								"totalCost": "59039"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 125,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 125,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 125,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 82,
									"end": 83,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 57,
									"end": 83,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 83,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 110,
									"end": 115,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 115,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 115,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 115,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 90,
									"end": 115,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 90,
									"end": 115,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 90,
									"end": 115,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 90,
									"end": 115,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 90,
									"end": 115,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 90,
									"end": 115,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 90,
									"end": 115,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 90,
									"end": 115,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 90,
									"end": 115,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 115,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 90,
									"end": 115,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 90,
									"end": 115,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 90,
									"end": 115,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 90,
									"end": 115,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 90,
									"end": 115,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 115,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 90,
									"end": 115,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 125,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 125,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 125,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 125,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 125,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 125,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 125,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 125,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 125,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 125,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 125,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 125,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 125,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 125,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 125,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 125,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 125,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 125,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ee986f4e6b414e1d6139ff8dab44dec50616b794c90e66beb4f8a8783b6c98c964736f6c634300080d0033",
									".code": [
										{
											"begin": 27,
											"end": 125,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 125,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ETH-Remix/freeCodeCamp.org/SimpleStorage.sol\":\"SimpleStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ETH-Remix/freeCodeCamp.org/SimpleStorage.sol\":{\"keccak256\":\"0x109134db52ce135fcc843f5d78b3a1e98cce6b2a4b518720330875292c231fdf\",\"urls\":[\"bzz-raw://1865c6a490073af89e6f43c118a65757b125a843acbc1acce01a6ebdceb2b690\",\"dweb:/ipfs/Qmat66FE7NdKVS8jSWALg3HCsFGuqHK5twgXp5FiSvAGxj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "ETH-Remix/freeCodeCamp.org/SimpleStorage.sol:SimpleStorage",
								"label": "favoriteNumber",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "ETH-Remix/freeCodeCamp.org/SimpleStorage.sol:SimpleStorage",
								"label": "favoriteBool",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> ETH-Remix/freeCodeCamp.org/SimpleStorage.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "ETH-Remix/freeCodeCamp.org/SimpleStorage.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ETH-Remix/freeCodeCamp.org/SimpleStorage.sol": {
				"ast": {
					"absolutePath": "ETH-Remix/freeCodeCamp.org/SimpleStorage.sol",
					"exportedSymbols": {
						"SimpleStorage": [
							8
						]
					},
					"id": 9,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SimpleStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 8,
							"linearizedBaseContracts": [
								8
							],
							"name": "SimpleStorage",
							"nameLocation": "36:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "favoriteNumber",
									"nameLocation": "65:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 8,
									"src": "57:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "57:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "82:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "favoriteBool",
									"nameLocation": "95:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 8,
									"src": "90:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 5,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "90:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "110:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "internal"
								}
							],
							"scope": 9,
							"src": "27:98:0",
							"usedErrors": []
						}
					],
					"src": "0:125:0"
				},
				"id": 0
			}
		}
	}
}